swagger: '2.0'
info:
  title: 'Parcel Coding MQTT API'
  description: "API definitions for Coding Data\nDefines the interface between the coding system (Mail Match System incl. manual coding station) and sorting control system.\n"
  contact:
    name: 'erkennen codieren pakete'
    email: erkennen.codieren.pakete@post.ch
  version: 5.6.0-feature-PZS-7630-add-sort-reason-sender-order-inspection.1
host: 'server:8080'
paths:
  '/{sortingUnitKey}/coding-sorting/v1/coding/transmit-final-result/{srcSystem}/{srcInstance}':
    post:
      summary: 'MQTT topic for sending coding data to the sorting system'
      description: 'All the related coding data of a specific coding workflow (e.g. OCR Addresscoding, VCS-coding, ...)'
      tags:
        - Coding
      parameters:
        -
          name: sortingUnitKey
          in: path
          description: 'Unique identifier of the sorting unit at a specific location'
          type: string
        -
          name: srcSystem
          in: path
          description: '3-letter uppercase name identifying the system issuing the message'
          type: string
          default: IC
        -
          name: srcInstance
          in: path
          description: 'two-digit padded number identifying the system instance issuing the message'
          type: string
          default: '01'
      responses:
        default:
          schema: {$ref: 'TransmitFinalResultEvent'}
  '/{sortingUnitKey}/coding-sorting/v1/coding/submit-action/{srcSystem}/{srcInstance}':
    post:
      summary: 'MQTT topic for coding instructions'
      description: 'Used by Sorting Systems to provide coding instructions (e.g. type of coding needed)'
      tags:
        - Control
      parameters:
        -
          name: sortingUnitKey
          in: path
          description: 'Unique identifier of the sorting unit at a specific location'
          type: string
        -
          name: srcSystem
          in: path
          description: '3-letter uppercase name identifying the system issuing the message'
          type: string
          default: IC
        -
          name: srcInstance
          in: path
          description: 'two-digit padded number identifying the system instance issuing the message'
          type: string
          default: '01'
      responses:
        default:
          schema: {$ref: 'SubmitActionEvent'}
definitions:
  AddressProducer:
    type: string
    enum:
      - PREANNOUNCEMENT
      - RECOGNITION_ADDRESS
      - RECOGNITION_ADDRESS_RETRY
      - VIDEO_CODING_ADDRESS
      - MANUAL_CODING_REJECT
      - MANUAL_CODING_BULK
      - MANUAL_CODING_BULK_SCANNING
    description: "PREANNOUNCEMENT  Component which validates and publishes preannouncement data\nRECOGNITION_ADDRESS  Component which reads address elements on an image\nRECOGNITION_ADDRESS_RETRY    Component which reads address elements on an image in a following workflow (e.g. after VCS ROI or VCS Postcode)\nVIDEO_CODING_ADDRESS Component where address information is remotely captured or entered by a coder based on an image\nMANUAL_CODING_REJECT Component where barcodes, weight, dimensions and address information are captured or entered (manually)\nMANUAL_CODING_BULK   Component where barcodes, weight, dimensions and address information for bulky goods are captured or entered (manually or partially automated)\nMANUAL_CODING_BULK_SCANNING Component where a coder manually captures barcodes and other specific information for bulky goods"
  AddressSource:
    type: object
    properties:
      producer:
        $ref: 'AddressProducer'
        description: 'Component which provided the information'
      instance:
        type: string
        description: 'Instance of the device'
      sortingUnit:
        $ref: 'SortingUnit'
        description: 'Sorting unit where the mailpiece was being processed'
    required:
      - producer
      - instance
      - sortingUnit
    additionalProperties: false
    description: "Describes which system provided the information. This is meant to be used for diagnositcs\nand should not be used to infer any business cases."
  Int:
    type: integer
    description: '<a href="https://swagger.io/docs/specification/data-models/data-types/#numbers">Number @asType integer</a>'
  Address:
    type: object
    properties:
      person:
        $ref: 'Person'
        description: 'Information regarding a person'
      locality:
        $ref: 'Locality'
        description: 'Locality of an address'
      deliveryPoint:
        $ref: 'DeliveryPoint'
        description: 'Delivery point of an address'
      source:
        $ref: 'AddressSource'
        description: 'Source of the address'
      appliedCodingRules:
        type: array
        items:
          type: string
        description: 'Coding rules which were applied to resolve the address'
      state:
        $ref: 'PersonalizedAddressState'
        description: 'Indicates state of a validated person living at a specific address'
      undeliverable:
        $ref: 'UndeliverableReason'
        description: 'Mailpiece is not deliverable to the recipient because of the personalized address state (e.g. NIXIE). Indicates the reason of the personalized address state.'
    required:
      - source
    additionalProperties: false
    description: 'Address captured by an enrichment device or delivered by a preannouncement system'
  CodingDepth:
    type: string
    enum:
      - ADAPTIVE
      - COUNTRY
      - POSTCODE
      - DELIVERY_POINT
      - RECEIVER
    description: "ADAPTIVE = Coding as deep as needed (default)\nCOUNTRY = Only Country information is relevant for Sorting\nPOSTCODE = Only Postcode information is relevant for Sorting\nDELIVERY_POINT = Only DeliveryPoint is relevant for Sorting\nRECEIVER = Receiver is needed for Sorting"
  CodingEventProducer:
    type: string
    enum:
      - IMAGE_CONTROLLER
      - MANUAL_CODING_REJECT
      - MANUAL_CODING_BULK
      - MANUAL_CODING_BULK_SCANNING
    description: "IMAGE_CONTROLLER Component which is responsible for the internal enrichment workflow of the coding systems (PieceManager)\nMANUAL_CODING_REJECT Component where barcodes, weight, dimensions and address information are captured or entered (manually)\nMANUAL_CODING_BULK   Component where barcodes, weight, dimensions and address information for bulky goods are captured or entered (manually or partially automated)\nMANUAL_CODING_BULK_SCANNING Component where a coder manually captures barcodes and other specific information for bulky goods"
  CodingInstruction:
    type: string
    enum:
      - ADDRESS_CODING
      - SERVICE_CODING
      - TRANSFER_CODING
    description: "ADDRESS_CODING   The coding system needs to trigger an address coding workflow (including barcode coding)\nSERVICE_CODING   The coding system needs to trigger a service coding workflow\nTRANSFER_CODING   The coding system needs to trigger a transfer coding workflow"
  CodingReasonCase:
    type: string
    enum:
      - NO_IMAGE
      - POOR_IMAGE
      - REJECTED_TIMEOUT
      - REJECTED_TECHNICAL
      - REJECTED_UNRESOLVABLE
      - NO_ADDRESS_ON_MAILPIECE
    description: "NO_IMAGE = Technical problem: e.g. images are black, too dark / white or no information is visible. The image quality does not allow reading of the address.\nPOOR_IMAGE = Insufficient image quality or poor contrast. The image quality does not allow reading of the address.\nREJECTED_TIMEOUT = Reject due to a timeout. In this case the solution doesn't deliver a result within a specific time.\nREJECTED_TECHNICAL = Reject due to technical problems (e.g. black images, poor resolution, blurred images, only partial image build up ).\nREJECTED_UNRESOLVABLE = Reject due to unresolved mailpiece (e.g. no address visible on the image, only a part of the sender visible, recipient coding cannot be done).\nNO_ADDRESS_ON_MAILPIECE = Reject because mailpiece either has no visible address, is damaged or in case it is not a Kleinware doesn't contain a barcode."
  CodingReason:
    type: object
    properties:
      codingStationType:
        $ref: 'CodingStationType'
        description: 'Type of the coding station for the coding reason.'
      reason:
        $ref: 'CodingReasonCase'
        description: 'Case, why a coding reason was thrown.'
    additionalProperties: false
  DateTime:
    type: string
    description: "<a href=\"https://swagger.io/docs/specification/data-models/data-types/#string\">String @format date-time</a>,\nas defined by <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339, section 5.6</a>,\nfor example: <code>2014-05-22T10:42:42.542+00:00</code>."
    format: date-time
  CodingResult:
    type: object
    properties:
      addresses:
        type: array
        items:
          $ref: 'Address'
        description: 'Contains information regarding the address located on a mailpiece or transfered by a preannouncement system'
      products:
        type: array
        items:
          $ref: 'Product'
        description: 'Contains validated products, physically located on a mailpiece or transfered by a preannouncement system'
      informationCarriers:
        type: array
        items:
          $ref: 'InformationCarrier'
        description: 'Information which were physically present on the parcel (e.g. barcodes)'
      serviceApplied:
        $ref: 'ServiceApplication'
        description: 'Services applied during the coding.'
      serviceRequested:
        $ref: 'ServiceRequest'
        description: 'New services requested during the coding, to be applied in the sorting control system.'
    additionalProperties: false
    description: 'Information captured by the coding systems during coding'
  CodingStationType:
    type: string
    enum:
      - RECOGNITION
      - VIDEO
      - MANUAL
    description: "RECOGNITION = Cases that may occur in OCR.\nVIDEO = Cases that may occur in VCS.\nMANUAL = Cases that may occur in MCS."
  Day:
    type: string
    enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
  DeliveryPointState:
    type: string
    enum:
      - APPROVED
      - IN_SERVICE
    description: "APPROVED    Planned and confimed but not valid yet\nIN_SERVICE   In service and valid"
  DeliveryPointType:
    type: string
    enum:
      - DOMICILE
      - PICKPOST
      - PARCEL_TERMINAL
      - POBOX
      - POSTE_RESTANTE
      - COMPANY_POSTCODE
      - INTERNATIONAL
      - MILITARY
      - INTERNAL_POSTCODE
    description: "DOMICILE = Domiziladresse\nPICK_POST = Pickpost\nPARCEL_TERMINAL = myPost24\nPOBOX = Post Office Box (Postfach)\nPOSTE_RESTANTE = Retain at swiss post (Postlagernd)\nCOMPANY_POSTCODE = Company Postcode indicates (FirmenPLZ)\nINTERNATIONAL = International address (Export)\nMILITARY = Military address\nINTERNAL_POSTCODE = Swiss post internal postcode"
  DeliveryPoint:
    type: object
    properties:
      houseKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies the address physically located on the mailpiece (e.g. domicile, poBox, pickPost, parcel terminal / myPost 24 or other service address)'
      mailBoxKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies the mailbox physically located on the mailpiece (HBK ID)'
      militaryKey:
        $ref: 'KeyWithConfidence'
        description: 'MLZ physically located on the mailpiece (read by the coding system)'
      deliveryPointType:
        $ref: 'DeliveryPointType'
        description: 'Type of a delivery point'
      state:
        $ref: 'DeliveryPointState'
        description: 'Indicates state of a validated delivery point'
    additionalProperties: false
    description: 'Information related to the delivery point of a recipient'
  DeliverySlot:
    type: object
    properties:
      dayOfTheWeek:
        $ref: 'Day'
        description: 'Day of the week when the mailpiece should be delivered. Only available in case of serviceType = DELIVERY_SLOT'
      timeWindow:
        $ref: 'TimeWindow'
        description: 'Time window when the mailpiece should be delivered. Only available in case of serviceType = DELIVERY_SLOT'
    additionalProperties: false
    description: 'Information about the desired delivery day and time of the customer'
  EnrichmentStep:
    type: object
    properties:
      eventId:
        type: string
        description: 'Internal id of the specific internal enrichment workflow'
      order:
        $ref: 'Int'
        description: 'Order of the enrichment'
      recognition:
        $ref: 'RecognitionStep'
        description: 'Step which occured in the recognition in the ocr engine'
      video:
        $ref: 'VideoCodingStep'
        description: 'Step which occured in video coding'
      manual:
        $ref: 'ManualCodingStep'
        description: 'Step which occured in manual coding'
      validation:
        $ref: 'ValidationStep'
        description: 'Step which occured in validation'
      startTime:
        $ref: 'DateTime'
        description: 'Start time of the enrichment'
      endTime:
        $ref: 'DateTime'
        description: 'End time of the enrichment'
    required:
      - eventId
      - startTime
      - endTime
    additionalProperties: false
  EventSource:
    type: object
    properties:
      producer:
        $ref: 'CodingEventProducer'
        description: 'Device which provided the information'
      instance:
        type: string
        description: 'Instance of the device'
    required:
      - producer
      - instance
    additionalProperties: false
    description: "Describes which system provided the information. This is meant to be used for diagnositcs\nand should not be used to infer any business cases."
  IdentifierTags:
    type: object
    properties:
      nationalMailpieceIds:
        type: array
        items:
          type: string
        description: "Contains the list of national identifiers to track a mail item within the country.\nThe id is printed on the mailpiece by the sender."
      internationalMailpieceIds:
        type: array
        items:
          type: string
        description: "Contains the list of international identifiers to track a mail item internationally.\nThe id is printed on the mailpiece by the sender."
      nationalLetterIds:
        type: array
        items:
          type: string
        description: "Contains the list of national identifiers to track a letter item within the country.\nThe id can only be created once during a machine sorting cycle and printed on the letter."
      internationalLetterIds:
        type: array
        items:
          type: string
        description: "Contains the list of Universal Postal Union Identifier (UPU-Id) as technical identifiers to track an letter item internationally.\nThe id can only be created once during a machine sorting cycle and printed on the letter.\nRemarks: BDE converts the UPU-Id into a shorter version"
      customerLetterIds:
        type: array
        items:
          type: string
        description: 'Contains the list of national identifiers from the customer to track a letter item within the country.'
      customsNumbers:
        type: array
        items:
          type: string
        description: 'Contains the list of national identifiers from the customs to track an imported mail item within the country.'
      boxIds:
        type: array
        items:
          type: string
        description: 'Contains the list of identifiers to track a Dispobox within the country.'
      sortingProcessId:
        type: string
        description: 'The technical identifier to track an mail item during the complete sorting process. UPU-Id is set as default.'
        maxLength: 200
      sortingProcessStepId:
        type: string
        description: "Contains the Unique Mailpiece-Image Identifier (UMI) as machine independent technical identifier to reference a machine sorting cycle of a mail item. The identifier is used to access the mail images.\nThe id is created during every machine sorting cycle."
        maxLength: 200
    additionalProperties: false
    description: 'Contains a list of logistic or technical identifiers to track a mail item within a specific context.'
  InformationCarrierProducer:
    type: string
    enum:
      - PREANNOUNCEMENT
      - DIMENSIONING_WEIGHTING_SCANNING
      - OCR_BARCODE
      - MANUAL_CODING_REJECT
      - MANUAL_CODING_BULK
      - MANUAL_CODING_BULK_SCANNING
    description: "PREANNOUNCEMENT  Component which validates and publishes preannouncement data\nDIMENSIONING_WEIGHTING_SCANNING Component which reads barcodes, captures dimensions and weights the parcel\nOCR_BARCODE  Component which reads / captures barcodes on an image\nMANUAL_CODING_REJECT Component where barcodes, weight, dimensions and address information are captured or entered (manually)\nMANUAL_CODING_BULK   Component where barcodes, weight, dimensions and address information for bulky goods are captured or entered (manually or partially automated)\nMANUAL_CODING_BULK_SCANNING Component where a coder manually captures barcodes and other specific information for bulky goods"
  InformationCarrierSource:
    type: object
    properties:
      producer:
        $ref: 'InformationCarrierProducer'
        description: 'Component which provided the information'
      instance:
        type: string
        description: 'Instance of the device'
      sortingUnit:
        $ref: 'SortingUnit'
        description: 'Sorting unit where the mailpiece was being processed'
    required:
      - producer
      - instance
      - sortingUnit
    additionalProperties: false
    description: "Describes which system provided the information. This is meant to be used for diagnositcs\nand should not be used to infer any business cases."
  InformationCarrier:
    type: object
    properties:
      symbology:
        $ref: 'Symbology'
        description: 'Symbology of an information carrier'
      value:
        type: string
        description: 'Value of an information carrier'
      marker:
        $ref: 'Marker'
        description: 'Marker of an information carrier'
      source:
        type: array
        items:
          $ref: 'InformationCarrierSource'
        description: 'Source of an information carrier. An information carrier can be captured by multiple devices during an enrichment worfklow'
      coderId:
        type: string
        description: 'Identification of the coder which scanned or typed the information carrier'
        maxLength: 50
    required:
      - source
    additionalProperties: false
    description: "Identified and captured information carrier (e.g. barcodes, logos)\n\nEither symbology and value OR marker has to be filled"
  KeyWithConfidence:
    type: object
    properties:
      key:
        type: string
        description: 'Value of a key'
      confidence:
        $ref: 'Int'
        description: 'Confidence of a key (based on validation with masterdata and coding rules)'
    required:
      - key
      - confidence
    additionalProperties: false
    description: 'Key with confidence base on validation'
  Language:
    type: string
    enum:
      - DE
      - FR
      - IT
      - EN
    description: Language
  Locality:
    type: object
    properties:
      streetKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies the street physically located on the mailpiece (street key in AMPplus)'
      postCodeKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies the postcode physically located on the mailpiece (Ordnungsnummer Post (ONRP), Fremdschlüssel zu ASDP)'
      communityKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies the community physically located on the mailpiece (BFS-Nr Gemeinde, Fremdschlüssel zu ASDP)'
      countryKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies the country physically located on the mailpiece (ID in the country-table in MDS)'
    additionalProperties: false
    description: 'Information related to the locality of an address'
  ManualCodingStep:
    type: string
    enum:
      - REJECT
      - BULK
      - BULK_SCANNING
    description: "REJECT Component where a coder manually captures barcodes and enters address information\nBULK   Component where barcodes, weight and dimensions and address information for bulky goods are captured or entered (manual or partially automated)\nBULK_SCANNING Component where a coder manually captures barcodes and other specific information for bulky goods"
  ManualRejectReason:
    type: string
    enum:
      - NO_ADDRESS_ON_MAILPIECE
    description: 'NO_ADDRESS_ON_MAILPIECE = Reject because mailpiece either has no visible address, is damaged or in case it is not a Kleinware doesn''t contain a barcode.'
  Marker:
    type: string
    enum:
      - BUSINESS_REPLY
      - INTERNATIONAL_BUSINESS_REPLY
    description: "BUSINESS_REPLY Geschäftsantwortsendung (CICERO)\nINTERNATIONAL_BUSINESS_REPLY Internationale Geschäftsantwortsendung (CCRI & IBRS)"
  PaymentMethod:
    type: string
    enum:
      - AUTOMATIC
      - AT_DELIVERY
      - BY_SENDER
      - TAX_FREE
      - BY_INVOICE
    description: "AUTOMATIC = The tax is invoiced automatically (Abrechnung via Pve)\nBY_SENDER = The tax is paid by the sender\nAT_DELIVERY = The tax has to be paid at delivery. Franking Value will be printed on the address label\nTAX_FREE = 0.00 will be printed on the address label\nBY_INVOICE = The tax will be paid by invoice"
  PersonState:
    type: string
    enum:
      - ACTIVE
      - DECEASED_EXPIRED
      - RELOCATED
      - PROVISIONAL
    description: "ACTIVE   The person is active and in service\nDECEASED_EXPIRED THE person is dead or the company is extinct\nRELOCATED    The person moved away without giving the new address\nPROVISIONAL  provisional entity"
  Person:
    type: object
    properties:
      personAddressKey:
        $ref: 'KeyWithConfidence'
        description: 'Identifies a person at a domiclie address (AMP-Key)'
      state:
        $ref: 'PersonState'
        description: 'Indicates state of a validated person'
    required:
      - personAddressKey
      - state
    additionalProperties: false
    description: 'Information related to the person of an address'
  PersonalizedAddressState:
    type: string
    enum:
      - PLANNED
      - ACTIVE
      - HISTORIC_ACTIVE
      - NIXIE
    description: "PLANNED  Planned but not yet deliverable\nACTIVE   Active and deliverable\nHISTORIC_ACTIVE  historic but active and deliverable\nNIXIE    different reasons (e.g. person or company doesen't exist anymore) - not deliverable"
  ProcessingStateType:
    type: string
    enum:
      - APPLIED
      - CANCELLED
    description: "APPLIED                  = Requested service has been applied.\nCANCELLED                = Requested service has been cancelled."
  ProductOrigin:
    type: string
    enum:
      - PREANNOUNCEMENT
      - READ
      - MANUALLY_APPLIED
      - AUTOMATIC
    description: "Specifies where this product code was read from.\n\nPREANNOUNCEMENT: The product is preannounced\nREAD: The product is read based on an image or text input\nMANUALLY_APPLIED: The product was added manually by a coder\nAUTOMATIC: The product was geneated during the sorting process"
  ProductProducer:
    type: string
    enum:
      - PREANNOUNCEMENT
      - DIMENSIONING_WEIGHTING_SCANNING
      - RECOGNITION_BARCODE
      - MANUAL_CODING_REJECT
      - MANUAL_CODING_BULK
      - MANUAL_CODING_BULK_SCANNING
      - SORTING
    description: "PREANNOUNCEMENT  Component which validates and publishes preannouncement data\nRECOGNITION_BARCODE  Component which reads / captures barcodes on an image\nDIMENSIONING_WEIGHTING_SCANNING Component which reads barcodes, captures dimensions and weights the parcel\nMANUAL_CODING_REJECT Component where barcodes, weight, dimensions and address information are captured or entered (manually)\nMANUAL_CODING_BULK   Component where barcodes, weight, dimensions and address information for bulky goods are captured or entered (manually or partially automated)\nMANUAL_CODING_BULK_SCANNING Component where a coder manually captures barcodes and other specific information for bulky goods\nSORTING Sorting component which delivered a product"
  ProductSource:
    type: object
    properties:
      producer:
        $ref: 'ProductProducer'
        description: 'Component which provided the information'
      origin:
        $ref: 'ProductOrigin'
        description: "Describes where the product information came from. Beware that the value of this\nfield can change with each coding for the same mailpiece.\nEg.: READ -> MANUALLY_APPLIED -> READ"
      instance:
        type: string
        description: 'Instance of the device'
      sortingUnit:
        $ref: 'SortingUnit'
        description: 'Sorting unit where the mailpiece was being processed'
    required:
      - producer
      - origin
      - instance
      - sortingUnit
    additionalProperties: false
    description: "Describes which system provided the information. This is meant to be used for diagnositcs\nand should not be used to infer any business cases."
  Product:
    type: object
    properties:
      code:
        type: string
        description: 'Validated product code (e.g. 509)'
      shortName:
        type: string
        description: 'Shortname of validated product (e.g. PRI)'
      source:
        type: array
        items:
          $ref: 'ProductSource'
        description: 'Source of a product. A product can be captured by multiple devices during an enrichment worfklow'
    required:
      - code
      - source
    additionalProperties: false
    description: 'Identified and validated product (old PRZL, "Zusatzleistung")'
  RecognitionRejectReason:
    type: string
    enum:
      - NO_IMAGE
      - POOR_IMAGE
    description: "NO_IMAGE = Technical problem: e.g. images are black, too dark / white or no information is visible. The image quality does not allow reading of the address.\nPOOR_IMAGE = Insufficient image quality or poor contrast. The image quality does not allow reading of the address."
  RecognitionStep:
    type: string
    enum:
      - BARCODE
      - INFORMATION_CARRIER
      - ADDRESS
      - ADDRESS_RETRY
    description: "INFORMATION_CARRIER Component which reads information carriers other than barcodes\nBARCODE  Component which reads / captures barcodes on an image\nADDRESS  Component which reads address elements on an image\nADDRESS_RETRY  Component which reads address elements on an image after providing information from other enrichment step (e.g. VCS ROI)"
  RejectReason:
    type: object
    properties:
      recognition:
        $ref: 'RecognitionRejectReason'
        description: 'Cases that may occur in OCR.'
      video:
        $ref: 'VideoRejectReason'
        description: 'Cases that may occur in VCS'
      manual:
        $ref: 'ManualRejectReason'
        description: 'Cases that may occur in MCS.'
    additionalProperties: false
  ReturnReasonType:
    type: string
    enum:
      - UNCLAIMED
      - RELOCATED
      - REFUSED
      - RECIPIENT_UNKNOWN
      - DECEASED
      - COMPANY_DELETED
      - RECIPIENT_RETURNED
      - DAMAGE
      - POST_RESTANTE
      - MILITARY
      - OVERSEA
      - OUTSIDE_CIRCLE
      - BOX_NO_LONGER_EMPTIED
      - RETURN_BY_RECEIVER
      - RETAIN
      - DEBT_COLLECTION
      - REMARK
      - INVALID_IDENTITY
      - MISSING_NAME_LABEL
      - CUSTOMS_CLEARANCE
      - GENERAL_CARGO_ILLEGAL_ADDRESS
      - OVERSEA_MISSING_DOCUMENTS
    description: "Reason why parcel is returned\nUNCLAIMED = 0 = Nicht abgeholt (/)\nRELOCATED = 1 = Weggezogen, Nachsendefrist abgelaufen (/)\nREFUSED = 2 = Annahme verweigert (/)\nRECIPIENT_UNKNOWN = 3 = Unbekannt (Empfänger nicht ermittelbar) (/)\nDECEASED = 4 = Gestorben (/)\nCOMPANY_DELETED = 5 = Firma erloschen (/)\nRECIPIENT_RETURNED = 6 = Retour gem. Anweisung Absender/Empf. (/)\nDAMAGE = 7 = Beschädigung\nPOST_RESTANTE = 8 = Postlagernd\nMILITARY = 9 = im Militär\nOVERSEA = 10 = im Ausland\nOUTSIDE_CIRCLE = 11 = ausserhalb Betreibungskreis\nBOX_NO_LONGER_EMPTIED = 12 = HBK/PF wird nicht mehr geleert\nRETURN_BY_RECEIVER = 13 = Rücksendung durch Empfänger\nRETAIN = 14 = Auftrag Post zurückbehalten\nDEBT_COLLECTION = 15 = Vorladung Betreibungurkunde (BU)\nREMARK = 16 = Vermerk auf Sendung beachten\nINVALID_IDENTITY = 17 = Ungültiges/falsches Ausweisdokument\nMISSING_NAME_LABEL = 18 = Briefkasten oder Klingel nicht angeschrieben\nCUSTOMS_CLEARANCE = 19 = Neu- oder Korrekturverzollung (/)\nGENERAL_CARGO_ILLEGAL_ADDRESS //General cargo (Stückgut) cannot be delivered to the designated address (i.e. a PO box)\nOVERSEA_MISSING_DOCUMENTS = 21 = Exportpaket ohne gültige Frachtpapiere"
  ServiceAddress:
    type: object
    properties:
      type:
        $ref: 'DeliveryPointType'
        description: 'Type of Address'
      organizationName:
        type: string
        description: 'Name of an organization (AMPplus: Name der Firma)'
        maxLength: 200
      organizationNameAddOn1:
        type: string
        description: 'Additional organization information'
        maxLength: 200
      organizationNameAddOn2:
        type: string
        description: 'Additional organization information'
        maxLength: 200
      salutation:
        type: string
        description: 'Salutation of the addressee'
      firstName:
        type: string
        description: "Firstnames of an addressee\n(AMPplus: Vorname)"
        maxLength: 75
      lastName:
        type: string
        description: "Lastname of an addressee\n(AMPplus: Name)"
        maxLength: 80
      additionalAddressLine1:
        type: string
        description: "Personalized and additional address information (e.g.c/o-Adresse)\n(AMPplus: Adresszusatz 1)"
        maxLength: 65
      additionalAddressLine2:
        type: string
        description: "Unpersonalized and not official information (e.g. Chalet Alpenblick / addressAddOn)\n(AMPplus: Adresszusatz 2)"
        maxLength: 65
      customerNumber:
        type: string
        description: "Customernumber (pickPost- or parcel terminal / myPost24 number)\nOnly available if type is PICK_POST or PARCEL_TERMINAL"
        maxLength: 8
      streetName:
        type: string
        description: "Name of the streed (e.g. Musterstrasse)\n(AMPplus: Strassenbezeichnung)"
        maxLength: 60
      houseNumber:
        type: string
        description: 'House number of an address including extension (e.g. Musterstrasse 14a)'
      poBoxNumber:
        type: string
        description: "Post Box Number which is located in an address\n(AMPplus: Postfachnummer)"
        maxLength: 10
      addressPostcode4:
        type: string
        description: "4 digit postcode\n(AMPplus: Postleitzahl)"
        maxLength: 4
      addressPostcodeExtension:
        type: string
        description: "Additional information related to a city\nmultiple purposes, see examples:\n56, 57 = Zoll, Import/Export\n60 = Briefzustellung\n61 = Postfach\n70 = Paketzustellung\n72 = Expresszustellung\n74 = Postautodienst\n75 = Kaserne"
        maxLength: 2
      addressPostcode6:
        type: string
        description: "6 digit postcode\n(AMPplus: Postleitzahl)"
        maxLength: 6
      city:
        type: string
        description: "City\n(AMPplus: Ort)"
        maxLength: 60
      countryCode:
        type: string
        description: 'ISO-Code of the country (2-digit)'
        maxLength: 2
      personAddressKey:
        type: string
        description: 'Identifies a person at a domiclie address (AMP-Key)'
      houseKey:
        type: string
        description: 'Identifies the address for the mailpiece (e.g. domicile, poBox, pickPost, parcel terminal / myPost 24 or other service address)'
      streetKey:
        type: string
        description: 'Identifies the street physically located on the mailpiece (street key in AMPplus)'
      postCodeKey:
        type: string
        description: 'Identifies the postcode physically located on the mailpiece (Ordnungsnummer Post (ONRP), Fremdschlüssel zu ASDP)'
    additionalProperties: false
    description: 'The service address contains the address data that is stored in the service order'
  ServiceApplication:
    type: object
    properties:
      serviceOrder:
        $ref: 'ServiceOrderCoding'
        description: 'Service order that has been processed.'
      processingState:
        $ref: 'ProcessingStateType'
        description: 'Indicates if the service order has been applied or not'
    required:
      - serviceOrder
      - processingState
    additionalProperties: false
    description: "The service application confirms that a service was applied or was cancelled (relevant for billing).\nIt is not supported to cancel the provided service coding and immediately apply a different service application,\ninstead a new service request has to be triggered."
  ServiceOrderCoding:
    type: object
    properties:
      orderId:
        type: string
        description: 'Id of the service order from the source system'
      orderType:
        $ref: 'ServiceOrderType'
        description: 'Type of the service order. Indicates if it''s an order for a single mailpiece or if it''s an order for an address (personAddressKey)'
      type:
        $ref: 'ServiceType'
        description: 'Type of the service. The type is needed to choose the right address label type.'
      changeableAddress:
        type: boolean
        description: 'Indicates whether the service address can be changed by the coding system. This applies to return addresses only. The information is based on the Frankierlizenz and passed on from there.'
      chargeable:
        type: boolean
        description: 'Indicates if the service is chargeable or not. If it''s chargeable the field taxInformation contains the tax to be printed on the address label.'
      taxInformation:
        $ref: 'TaxInformation'
        description: 'The tax information for the service. If a franking value is available, this information has to be printed on the address label.'
      deliverySlot:
        $ref: 'DeliverySlot'
        description: 'Detailed information about the service type DELIVERY_SLOT'
      returnReason:
        $ref: 'ReturnReasonType'
        description: 'Indicates the reason of a returned mailpiece'
      actionDate:
        $ref: 'DateTime'
        description: 'Date that needs to be printed on the label in the retain case'
      deliveryLanguage:
        $ref: 'Language'
        description: 'Language of the distribution office that delivers the mailpiece to the service address. Used to print the address in the correct language.'
    required:
      - orderId
      - orderType
    additionalProperties: false
    description: "Service data which was applied during the manual coding process.\nIncludes service data delivered by a sorting system.\nApplied products and addresses can be found directly in the context of Address and Products."
  ServiceOrderSorting:
    type: object
    properties:
      orderId:
        type: string
        description: 'Id of the service order from the source system'
      orderType:
        $ref: 'ServiceOrderType'
        description: 'Type of the service order. Indicates if it''s an order for a single mailpiece or if it''s an order for an address (personAddressKey)'
      serviceType:
        $ref: 'ServiceType'
        description: 'Type of the service. The type is needed to choose the right address label type.'
      address:
        $ref: 'ServiceAddress'
        description: 'The new recipient address'
      changeableAddress:
        type: boolean
        description: 'Indicates whether the service address can be changed by the coding system. This applies to return addresses only. The information is based on the Frankierlizenz and passed on from there.'
      chargeable:
        type: boolean
        description: 'Indicates if the service is chargeable or not. If it''s chargeable the field taxInformation contains the tax to be printed on the address label.'
      taxInformation:
        $ref: 'TaxInformation'
        description: 'The tax information for the service. If a franking value is available, this information has to be printed on the address label.'
      productCodes:
        type: array
        items:
          type: string
        description: 'Product codes (PRZL) that needs to be printed on the label'
      deliverySlot:
        $ref: 'DeliverySlot'
        description: 'Detailed information about the service type DELIVERY_SLOT'
      returnReason:
        $ref: 'ReturnReasonType'
        description: 'Indicates the reason of a returned mailpiece'
      actionDate:
        $ref: 'DateTime'
        description: 'Date that needs to be printed on the label in the retain case'
      deliveryLanguage:
        $ref: 'Language'
        description: 'Language of the distribution office that delivers the mailpiece to the service address. Used to print the address in the correct language.'
    required:
      - orderId
      - orderType
    additionalProperties: false
    description: 'Data from the service order that is relevant for the coding system to do the service coding.'
  ServiceOrderType:
    type: string
    enum:
      - SINGLE_ORDER
      - PERMANENT_ORDER
      - TRANSFER_LABEL
      - MILITARY
      - MANUAL_ORDER
      - SENDER_SINGLE_ORDER
    description: "SINGLE_ORDER = order for a specific mailpiece (Empfänger-Einzelauftrag)\nPERMANENT_ORDER = order for personAddressKey (Empfänger-Dauerauftrag)\nTRANSFER_LABEL = order for a transfer label case\nMILITARY = order for a military address\nMANUAL_ORDER = order created at a manual coding station\nSENDER_SINGLE_ORDER = order for a specific mailpiece created by the sender"
  ServiceRequestType:
    type: string
    enum:
      - FORWARD
      - RETURN
      - FURTHER_PROCESSING
    description: "FORWARD: mailpiece should be forwarded to a different address\nRETURN: mailpiece should be returned to the initial sender\nFURTHER_PROCESSING: transfer label inconclusive. Mailpiece should be sent to the last delivery office"
  ServiceRequest:
    type: object
    properties:
      serviceOrderId:
        type: string
        description: 'Id of the service order.'
      serviceType:
        $ref: 'ServiceRequestType'
        description: 'Type of the service request.'
      returnReason:
        $ref: 'ReturnReasonType'
        description: 'Reason for return (only if serviceType = RETURN).'
    required:
      - serviceOrderId
      - serviceType
    additionalProperties: false
    description: "Request from the Coding system to the sorting system to add additional services to the mailpiece.\nAn additional coding request can be expected after the service request property has been filled."
  ServiceType:
    type: string
    enum:
      - FORWARD
      - FORWARD_POBOX
      - DELIVERY_SLOT
      - RETURN
      - DELAYED_PICKUP
      - DELAYED_DELIVERY
      - INTERNATIONAL
      - MILITARY
      - INSPECTION
    description: "FORWARD = forward mailpiece to another address\nFORWARD_POBOX = forward mailpiece from a postbox to a domicile address\nDELIVERY_SLOT = deliver mailpiece on a specific weekday / at a specific time window\nRETURN = the mailpiece has to returned to the sender\nDELAYED_PICKUP = the mailpiece has to retained at the postoffice for a specific time. After this time it must be picked up by the receiver.\nDELAYED_DELIVERY = the mailpiece has to retained at the postoffice for a specific time. After this time it must be delivered to the receiver.\nINTERNATIONAL = the mailpiece must be directed an export office\nMILITARY = Military address\nINSPECTION = inspect mailpiece via customs officer or sorting specialist"
  SimulationOrigin:
    type: string
    enum:
      - SIMULATOR
      - FRANKING_LICENSE
      - LOCATION
    description: "Describes how/where this event was simulated.\n- SIMULATOR: A simulator was used, no real mailpiece exists\n- FRANKING_LICENSE: The parcel belongs to a Franking license that is use for testing only\n- LOCATION: the location where that mailpiece was sorted is marked as a test location (eg. testing before go live)"
  Simulation:
    type: object
    properties:
      origin:
        $ref: 'SimulationOrigin'
    required:
      - origin
    additionalProperties: false
    description: "Marks this event as a simulated event. This means that the mailpiece referenced in this message should not be considered a production mailpiece.\nIt is in the responsibility of the consumer to decide what to do with this information. For most use cases this event can be processed like\nany other event, but should be markes as a simulated event. Some actions should not be executed for simulated events\n(eg. no notifaction should be sent to the actual customer).\nSimulated events must not affect any non-simulated mailpeices in any way.\n\nThe Simulation object provides additional information about the purpose of this simulation."
  SortReason:
    type: string
    enum:
      - NO_ADDRESSING_DESTINATION_OR_SORT_REASON
      - SORTER_DEVICE_ERROR
      - TOO_MANY_SORTING_LOOPS
      - RECIPIENT_ORDER
      - NOT_IN_SORT_PLAN
      - NO_SORTING_RULE_MATCHED
      - LOOPING_MAILPIECE
      - CARGO
      - CUSTOMS_MISSING_DECLARATION
      - CUSTOMS_BLOCKED
      - CUSTOMS_INSPECTION
      - CUSTOMS_EXTERNAL_INSPECTION
      - ZALANDO_RED
      - RECIPIENT_ORDER_FORWARD_ADDRESSEE
      - RECIPIENT_ORDER_FORWARD_LOCATION
      - RECIPIENT_ORDER_DELIVERY_DAY
      - RECIPIENT_ORDER_FORWARD
      - RECIPIENT_ORDER_SECOND_DELIVERY
      - RECIPIENT_STANDING_ORDER_FORWARD
      - RECIPIENT_STANDING_ORDER_FORWARD_PO_BOX
      - RECIPIENT_STANDING_ORDER_DELAYED_PICKUP
      - RECIPIENT_STANDING_ORDER_DELAYED_DELIVERY
      - RECIPIENT_STANDING_ORDER_RETURN
      - RECIPIENT_STANDING_ORDER_DELIVERY_SLOT
      - SENDER_ORDER_CHANGE
      - TRANSFER_FORWARD
      - TRANSFER_RETURN
      - TRANSFER
      - THERMO_CARE_AMBIENT_FOR_STORAGE
      - THERMO_CARE_COLD_FOR_STORAGE
      - DISTRIBUTION_MONDAY
      - DISTRIBUTION_TUESDAY
      - DISTRIBUTION_WEDNESDAY
      - DISTRIBUTION_THURSDAY
      - DISTRIBUTION_FRIDAY
      - DISTRIBUTION_SATURDAY
      - MULTIPLE_IDENT_CODES
      - MAILPIECE_WITHOUT_IDENT_CODE
      - NOT_IN_DELIVERY_PLAN
      - NO_SPECIAL_SORT_MAPPING
      - MILITARY_MAILPIECE
      - LETTER_LABEL_RETURN
      - MULTIPLE_LETTER_LABEL_FORWARD
      - LETTER_EXPRESS
      - NO_CONTAINER_POSITION_FOR_CONVEYING_AID
      - LOOPING_MAILPIECE_SAME_CENTER
      - LOOPING_MAILPIECE_BETWEEN_CENTERS
      - LOOPING_MAILPIECE_MAXIMUM
      - MILITARY_POSTCODE_NOT_PLANNED
      - SENDER_ORDER_INSPECTION
    description: "NO_ADDRESSING_DESTINATION_OR_SORT_REASON     No addressing destination or sort reason fround.\nSORTER_DEVICE_ERROR                          The sorter device had an error.\nTOO_MANY_SORTING_LOOPS                       A mailpiece was processed internally too often.\nRECIPIENT_ORDER                              A recipient order was detected.\nNOT_IN_SORT_PLAN                             No entry in sort plan could be found for mailpiece.\nNO_SORTING_RULE_MATCHED                      No sorting rule applied for mailpiece.\nLOOPING_MAILPIECE                            The mailpiece is a looping mailpiece.\nCARGO                                        The mailpiece is cargo.\nCUSTOMS_MISSING_DECLARATION                  The mailpiece is missing a customs declaration.\nCUSTOMS_BLOCKED                              The mailpiece is blocked by customs.\nCUSTOMS_INSPECTION                           The mailpiece should be inspected by customs.\nCUSTOMS_EXTERNAL_INSPECTION                  The mailpiece should be externally inspected by customs.\nZALANDO_RED                                  The mailpiece is Zalando Red.\nRECIPIENT_ORDER_FORWARD_ADDRESSEE            The mailpiece will be forwarded to another address.\nRECIPIENT_ORDER_FORWARD_LOCATION             The mailpiece will be forwarded to another location.\nRECIPIENT_ORDER_DELIVERY_DAY                 The mailpiece will be delivered on a desired day.\nRECIPIENT_ORDER_FORWARD                      The mailpiece will be forwarded.\nRECIPIENT_ORDER_SECOND_DELIVERY              The mailpiece will be delivered a second time.\nRECIPIENT_STANDING_ORDER_FORWARD             The mailpiece will be forwarded.\nRECIPIENT_STANDING_ORDER_FORWARD_PO_BOX      The mailpiece will be forwarded to a pobox.\nRECIPIENT_STANDING_ORDER_DELAYED_PICKUP      The mailpiece will be withheld and picked up later.\nRECIPIENT_STANDING_ORDER_DELAYED_DELIVERY    The mailpiece will be withheld and delivered later.\nRECIPIENT_STANDING_ORDER_RETURN              The mailpiece will be returned.\nRECIPIENT_STANDING_ORDER_DELIVERY_SLOT       The mailpiece will be delivered at a specific time slot.\nSENDER_ORDER_CHANGE\nTRANSFER_FORWARD                             A forward transfer case has been detected.\nTRANSFER_RETURN                              A return transfer case has been detected.\nTRANSFER                                     A transfer case has been detected.\nTHERMO_CARE_AMBIENT_FOR_STORAGE              The mailpiece is ThermoCare ambient.\nTHERMO_CARE_COLD_FOR_STORAGE                 The mailpiece is ThermoCater cold.\nDISTRIBUTION_MONDAY                          The mailpiece will be delivered on monday.\nDISTRIBUTION_TUESDAY                         The mailpiece will be delivered on tuesday.\nDISTRIBUTION_WEDNESDAY                       The mailpiece will be delivered on wednesday.\nDISTRIBUTION_THURSDAY                        The mailpiece will be delivered on thursday.\nDISTRIBUTION_FRIDAY                          The mailpiece will be delivered on friday.\nDISTRIBUTION_SATURDAY                        The mailpiece will be delivered on saturday.\nMULTIPLE_IDENT_CODES                         Multiple ident codes have been detected.\nMAILPIECE_WITHOUT_IDENT_CODE                 No ident code has been detected.\nNOT_IN_DELIVERY_PLAN                         No entry in delivery plan could be found for mailpiece.\nNO_SPECIAL_SORT_MAPPING                      The sort reason could not be mapped to a special sort.\nMILITARY_MAILPIECE                           The mailpiece is a military mailpiece.\nLETTER_LABEL_RETURN                          A letter return label has been detected.\nMULTIPLE_LETTER_LABEL_FORWARD                Multiple letter forward labels have been detected.\nLETTER_EXPRESS                               The mailpiece is an express letter.\nNO_CONTAINER_POSITION_FOR_CONVEYING_AID      The mailpiece is on a conveying aid and could not be sorted to the intended position because it does not support conveying aids.\nLOOPING_MAILPIECE_SAME_CENTER:               Mailpiece has been looping in the current center.\nLOOPING_MAILPIECE_BETWEEN_CENTERS:           Mailpiece has been looped between centers.\nLOOPING_MAILPIECE_MAXIMUM:                   The Mailpiece was sorted a maximum amount without being sorted to a delivery.\nMILITARY_POSTCODE_NOT_PLANNED                The military postcode MLZ (Militärleitzahl) of the mailpiece has no postcode6 assigned, there is no entry in MilitaryBase.\nSENDER_ORDER_INSPECTION                      The mailpiece will be inspected."
  SortingProcess:
    type: string
    enum:
      - AUTOMATIC
      - MANUAL_CODING_REJECT
      - MANUAL_CODING_LIGHT
      - MANUAL_CODING_BULK
      - MANUAL_CODING_BULK_AUTOMATIC
    description: "AUTOMATIC Sorted by the sorter\nMANUAL_CODING_REJECT Device where a coder manually captures barcodes and enters address information\nMANUAL_CODING_LIGHT Device where barcodes barcodes, products and the weight is captured (manual or partially automated)\nMANUAL_CODING_BULK Device where barcodes, weight and dimensions and address information for bulky goods are captured or entered (manual or partially automated)\nMANUAL_CODING_BULK_AUTOMATIC Device where a coder manually captures barcodes and other specific information for bulky goods"
  SortingUnit:
    type: object
    properties:
      sortingUnitKey:
        type: string
        description: 'Unique identifier of the sorting unit at a specific location.'
      locationKey:
        type: string
        description: 'Unique key identifying the location.'
    required:
      - sortingUnitKey
      - locationKey
    additionalProperties: false
    description: 'Sorting unit at a location performing the sorting process step.'
  SubmitActionEvent:
    type: object
    properties:
      eventId:
        type: string
        description: "Unique identifier of a submitAction message\nPrimary key 🔑"
        maxLength: 200
      timestamp:
        $ref: 'DateTime'
        description: 'Time when the event occurred'
      processingItemId:
        type: string
        description: 'machine specific id to identify the mailpiece during a sorting process'
        maxLength: 32
      sortingCycleId:
        type: string
        description: "Globally unique identifier for the sorting cylce.\nA sorting cycle starts when a mailpiece is submitted to a sorting unit and end with the discharge of the mailpiece."
      mailpieceGlobalKey:
        type: string
        description: "Globally unique key for the mailpiece.\nOnly a single mailpiece may have the same Key and the Key is never to be reused again, allowing to identify every mailpiece\never processed.\nPrimary key 🔑"
      idTags:
        $ref: 'IdentifierTags'
        description: 'Optional list of Ids that identifies a mailpiece in a specific context'
      codingInstruction:
        $ref: 'CodingInstruction'
        description: 'The type of coding requested by sorting system'
      sortingUnit:
        $ref: 'SortingUnit'
        description: 'Sorting unit where the mailpiece was being processed'
      discardPreknowledgeData:
        type: boolean
        description: "Instructs the coding system to discard all preknowledge and start coding as if there was no information\nfrom a previous coding or preannouncement for this mailpiece"
      sortReasonFromMostRecentSorting:
        $ref: 'SortReason'
        description: 'The sort reason from the last time the mailpiece was sorted, if there was one.'
      codingDepth:
        $ref: 'CodingDepth'
        description: 'Required coding depth of the sorting system. Relevant in case of codingInstruction = ADDRESS_CODING'
      serviceOrder:
        $ref: 'ServiceOrderSorting'
        description: 'Service information that is needed for the service coding (case codingInstruction = SERVICE_CODING)'
      simulation:
        $ref: 'Simulation'
        description: 'If simulation is not null, this event belongs to a simulation and should not be considered productive.'
    required:
      - eventId
      - timestamp
      - processingItemId
      - sortingCycleId
      - mailpieceGlobalKey
      - codingInstruction
      - sortingUnit
      - discardPreknowledgeData
    additionalProperties: false
  Symbology:
    type: string
    enum:
      - NOT_RECOGNIZED
      - ADDON
      - CODABAR
      - CODE_39
      - CODE_93
      - CODE_128
      - DATA_MATRIX
      - EAN_8
      - EAN_13
      - EAN_128
      - I2OF5
      - MAXI_CODE
      - PDF_417
      - QR
      - UPC_A
      - UPC_E
    description: "NOT_RECOGNIZED The symbology is not recognized\nADDON Barcode Zusatz zu EAN und UPC\nCODABAR Barcode Codabar\nCODE_39 Barcode 39\nCODE_93 Barcode 93\nCODE_128 Barcode 128\nDATA_MATRIX Data Matrix Code\nEAN_8 International Article Number\nEAN_13 International Article Number\nEAN_128 International Article Number\nI2OF5 Interleved 2 of 5 Code\nMAXI_CODE Barcode Maxicode\nPDF_417 Barcode PDF417\nQR QR Barcode\nUPC_A Barcode Universal Product Codes (Normalversion)\nUPC_E Barcode Universal Product Codes (Kurzvariante)"
  TaxInformation:
    type: object
    properties:
      frankingValue:
        type: number
        description: 'The Tax of this service in CHF. This Value is printed on the address label.'
      paymentMethod:
        $ref: 'PaymentMethod'
        description: 'Payment method of the service order. The remark on the address label depends on this value'
    additionalProperties: false
    description: 'Tax information for a service'
  TimeWindow:
    type: string
    enum:
      - REGULAR
      - EARLY
      - EVENING
  TransmitFinalResultEvent:
    type: object
    properties:
      eventId:
        type: string
        description: "Unique identifier of a coding message\nPrimary key 🔑"
        maxLength: 200
      timestamp:
        $ref: 'DateTime'
        description: 'Time when the event is published'
      processingItemId:
        type: string
        description: "Identifier generated by the sorting unit for one sorting cycle. This id is only valid during the\nsorting cycle and might be reused by the sorting unit quickly for a next sorting cycle.\nTo correlate event to one sorting cycle use the sortingCycleId."
      sortingCycleId:
        type: string
        description: "Globally unique identifier for the sorting cycle.\nA sorting cycle starts when a mailpiece is submitted to a sorting unit and end with the discharge of the mailpiece."
      mailpieceGlobalKey:
        type: string
        description: "Globally unique key for the mailpiece.\nOnly a single mailpiece may have the same Key and the Key is never to be reused again, allowing to identify every mailpiece\never processed.\nPrimary key 🔑"
      idTags:
        $ref: 'IdentifierTags'
        description: 'Contains a list of ids identifying the processing item.'
      codingInstruction:
        $ref: 'CodingInstruction'
        description: "Make required as soon as the coding system has updated to this version\nThe type of coding requested by the sorting system"
      sortingUnit:
        $ref: 'SortingUnit'
        description: 'Sorting unit where the mailpiece was being processed'
      codingResult:
        $ref: 'CodingResult'
        description: "Data captured during a workflow in the coding system\nThis may contain aggregated data from multiple enrichment steps"
      source:
        $ref: 'EventSource'
        description: 'The system which publishes the event'
      workflow:
        $ref: 'Workflow'
        description: 'Detailed insights in the internal workflow steps which occured to deliver the information in this event'
      simulation:
        $ref: 'Simulation'
        description: 'If simulation is not null, this event belongs to a simulation and should not be considered productive.'
      sortingProcess:
        $ref: 'SortingProcess'
        description: 'Defines how and where the mailpiece was sorted.'
    required:
      - eventId
      - timestamp
      - processingItemId
      - sortingCycleId
      - mailpieceGlobalKey
      - codingInstruction
      - sortingUnit
      - source
      - workflow
    additionalProperties: false
    description: 'transmit-final-result event'
  UndeliverableReason:
    type: string
    enum:
      - DECEASED
      - RECEIVER_NOT_DETERMINED
      - COMPANY_EXTINGUISHED
      - FORWARDING_DEADLINE_EXPIRED
      - NO_FORWARDING_ADDRESS_AVAILABLE
    description: "DECEASED = The person is deceased\nRECEIVER_NOT_DETERMINED = Receiver could not be determined at stated address.\nCOMPANY_EXTINGUISHED = The company does not exist anymore.\nFORWARDING_DEADLINE_EXPIRED = Relocated, forwarding address is expired.\nNO_FORWARDING_ADDRESS_AVAILABLE = No forwarding address is available."
  ValidationStep:
    type: string
    enum:
      - AUTOMATIC
      - HUMAN_SUPPORT
    description: "AUTOMATIC Component which validates an address in an automated enrichment workflow step (e.g. ocr address)\nHUMAN_SUPPORT Component which validates an address in an enrichment workflow where a human is involved - as a support of the coder (e.g. MCS or VCS)"
  VideoCodingStep:
    type: string
    enum:
      - INTERNAL_REGION
      - INTERNAL_POSTCODE
      - INTERNAL_ADDRESS
      - EXTERNAL_REGION
      - EXTERNAL_POSTCODE
      - EXTERNAL_ADDRESS
    description: "INTERNAL_REGION Component VCS CH: Task in the video coding system where the coder detects address region of interest (ROI) elements on an image\nINTERNAL_POSTCODE Component VCS CH: Task in the video coding system where the coder enters the postcode based on an address region of interest (ROI) image\nINTERNAL_ADDRESS Component VCS CH: Task in the video coding system where the coder enters the recipient address based on an address region of interest (ROI) image\nEXTERNAL_REGION Component VCS Offshore: Task in the video coding system where the coder detects address region of interest (ROI) elements on an image\nEXTERNAL_POSTCODE Component VCS Offshore: Task in the video coding system where the coder enters the postcode based on an address region of interest (ROI) image\nEXTERNAL_ADDRESS Component VCS Offshore: Task in the video coding system where the coder enters the recipient address based on an address region of interest (ROI) image"
  VideoRejectReason:
    type: string
    enum:
      - REJECTED_TIMEOUT
      - REJECTED_TECHNICAL
      - REJECTED_UNRESOLVABLE
    description: "REJECTED_TIMEOUT = Reject due to a timeout. In this case the solution doesn't deliver a result within a specific time.\nREJECTED_TECHNICAL = Reject due to technical problems (e.g. black images, poor resolution, blurred images, only partial image build up ).\nREJECTED_UNRESOLVABLE = Reject due to unresolved mailpiece (e.g. no address visible on the image, only a part of the sender visible, recipient coding cannot be done)."
  Workflow:
    type: object
    properties:
      enrichmentSteps:
        type: array
        items:
          $ref: 'EnrichmentStep'
        description: 'The enrichment steps which occured during a coding workflow. Only one step per array object can be set.'
      maxImageBasedCodingReached:
        type: boolean
        description: 'Indicates if more image based coding is possible'
      rejectReason:
        $ref: 'RejectReason'
        description: "Reject that may happen during coding process. They can be discharged as special sorts by the sorting system.\n\nDEPRECATED: Will be removed at the next update! Please replace it with the codingReason below."
      codingReasons:
        type: array
        items:
          $ref: 'CodingReason'
        description: 'Coding reasons that may happen during coding process. They can be used as special sorts or for a statistical purpose.'
    required:
      - enrichmentSteps
      - maxImageBasedCodingReached
    additionalProperties: false
